version: "3.8"

services:
  frontend:
    container_name: frontend
    build:
      context: ../frontend
      dockerfile: ../infra/frontend/Dockerfile
    environment:
      NODE_ENV: development
    volumes:
      - ../frontend:/usr/src/app
    restart: always
    ports:
      - "8002:8080"
    depends_on:
      - backend
  backend:
    container_name: backend
    build:
      context: ../backend
      dockerfile: ../infra/backend/Dockerfile
    environment:
      NODE_ENV: development
    volumes:
      - ../backend:/usr/src/app
    depends_on:
      - postgres
      - mongo
    restart: always
    ports:
      - "3000:3000"
  postgres:
    container_name: postgres
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=togethertalk
      - POSTGRES_PASSWORD=togethertalk
      - POSTGRES_DB=togethertalk
    volumes:
      - ./databases/postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U togethertalk -d togethertalk" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: togethertalk
      MONGO_INITDB_ROOT_PASSWORD: togethertalk
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - ./databases/mongo:/data/db
